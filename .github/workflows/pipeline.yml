
name: Build pipeline

on:
    push:
      branches:
        - master
  
      tags:
        - v*
  
    pull_request:
    
env:
  AZURE_CONTAINER_NAME: container-name
  PYTHON_VERSION: 3.7     

jobs:
    requirements:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.7'
        - name: Generate and install dependencies
          run: |
            python -m pip install --upgrade pip
            python setup.py requirements
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    test:
        needs: requirements

        runs-on: ubuntu-latest
    
        steps:
        - uses: actions/checkout@v2

        - name: Run pytest
          run: |
            pip install pytest
            pytest demoapp/tests/
    
        - name: Test docker
          run: docker build . --file Dockerfile
    
    # build:
    #     needs: test
    
    #     runs-on: ubuntu-latest
    #     if: github.event_name == 'push'

    #     steps:
    #     - uses: actions/checkout@v2

    #     - name: Build package
    #         run: python setup.py sdist bdist_wheel
    
    #     - name: Build image
    #         run: docker build . --file Dockerfile --tag $IMAGE_NAME

    # release:
    #     needs: build
    
    #     runs-on: ubuntu-latest
    #     if: github.event_name == 'push'
    
    #     - name: Push image
    #         run: |
    #         IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
            
    #         # Change all uppercase to lowercase
    #         IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
    
    #         # Strip git ref prefix from version
    #         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
    
    #         # Strip "v" prefix from tag name
    #         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
    
    #         # Use Docker `latest` tag convention
    #         [ "$VERSION" == "master" ] && VERSION=latest
    
    #         echo IMAGE_ID=$IMAGE_ID
    #         echo VERSION=$VERSION
    
    #         docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
    #         docker push $IMAGE_ID:$VERSION